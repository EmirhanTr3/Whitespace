generator client {
  provider = "prisma-client-js"
  engineType = "library"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  username      String    @unique
  displayname   String
  email         String    @unique
  password      String
  avatar        String?
  badges        String[]  @default([])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  Member Member[]
  Guild Guild[]
}

model Member {
  id      Int   @id @default(autoincrement())
  userId  Int
  user    User  @relation(fields: [userId], references: [id])
  guildId Int
  guild   Guild[]

  Message Message[]
}

model Guild {
  id         Int        @id @default(autoincrement())
  name       String
  icon       String?
  channels   Channel[]
  members    Member[]
  ownerId    Int
  owner      User       @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  createdAt  DateTime   @default(now())
}

model Channel {
  id        Int        @id @default(autoincrement())
  name      String
  guildId   Int
  guild     Guild      @relation(fields: [guildId], references: [id], onDelete: Cascade)
  messages  Message[]
  createdAt DateTime   @default(now())
}

model Message {
  id         Int      @id @default(autoincrement())
  channelId  Int
  channel    Channel  @relation(fields: [channelId], references: [id], onDelete: Cascade)
  authorId   Int
  author     Member   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  content    String
  createdAt  DateTime @default(now())
}